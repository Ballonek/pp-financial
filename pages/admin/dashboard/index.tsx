import type { GetServerSideProps, NextPage } from 'next';
import Head from 'next/head';
import Cookies from 'cookies';
import { axiosInstance } from '../../../code/constants';
import jscookie from 'js-cookie';
import { Button, CircularProgress, Grid, Input, Typography } from '@mui/material';
import { FormProvider, useForm } from 'react-hook-form';
import { ChangeEvent, useState } from 'react';
import { useMutation } from 'react-query';
import { getDashboard, postBackgroundImage, putDashboard } from '../../../code/api';
import Image from 'next/image';
import { useRouter } from 'next/router';
import { AppInput } from '../../../components/AppInput';
import { FormProps } from '../../../components/types';

const Dashboard: NextPage<{ dashboard: FormProps }> = ({ dashboard }) => {
  const router = useRouter();
  const form = useForm<FormProps>({ defaultValues: dashboard });
  const [img, setImg] = useState(`${process.env.NEXT_PUBLIC_API}/dashboard/backgroundImg`);
  const { mutate, isLoading } = useMutation(postBackgroundImage);
  const { mutate: mutateForm, isLoading: isLoadingForm } = useMutation(putDashboard);

  const onImageChange = (e: ChangeEvent<HTMLInputElement>) => {
    if (e?.target?.files && e.target.files[0]) {
      const imgToSend = e.target.files[0];

      mutate(
        { token: jscookie.get('token')!, img: imgToSend },
        {
          onSuccess: () => {
            router.reload();
          },
        }
      );
    }
  };

  const onSubmit = (values: FormProps) => {
    mutateForm({ token: jscookie.get('token')!, values });
  };

  return (
    <Grid container>
      <Head>
        <title>PP Financial - Admin dashboard</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Grid>
        <Grid>
          <label htmlFor='contained-button-file'>
            <input accept='image/*' id='contained-button-file' type='file' onChange={onImageChange} style={{ display: 'none' }} />
            <Button variant='contained' component='span' disabled={isLoading}>
              {isLoading ? <CircularProgress size={20} /> : 'Vyměnit obrázek pozadí'}
            </Button>
          </label>
        </Grid>
        <div
          style={{
            backgroundImage: `url(${img})`,
            backgroundSize: 'cover',
            height: 300,
            width: 500,
          }}
        />

        <form style={{ marginTop: 30 }} onSubmit={form.handleSubmit(onSubmit)}>
          <FormProvider {...form}>
            <Grid display='flex' justifyContent='space-around' height={200} flexDirection='column'>
              <Grid>
                <AppInput variant='outlined' type='text' fullWidth label='Uvítací text' name='welcomeText' />
              </Grid>
              <Grid>
                <AppInput variant='outlined' type='text' fullWidth label='Text poděkování' name='thanksText' />
              </Grid>
              <Grid>
                <AppInput variant='outlined' type='text' fullWidth label='Text poděkování 2' name='thanksSubText' />
              </Grid>
            </Grid>
            <Button variant='contained' type='submit' disabled={isLoading}>
              {isLoadingForm ? <CircularProgress size={20} /> : 'Uložit'}
            </Button>
          </FormProvider>
        </form>
      </Grid>
    </Grid>
  );
};

export const getServerSideProps: GetServerSideProps = async ({ req, res }) => {
  const cookies = new Cookies(req, res);

  const token = cookies.get('token');

  const { data } = await axiosInstance.get('/admin', { headers: { Authorization: `Bearer ${token}` } });

  if (!data || !token) {
    return {
      redirect: {
        destination: '/admin',
        permanent: false,
      },
    };
  }

  const response = await getDashboard();

  return {
    props: {
      dashboard: response.data,
    },
  };
};

export default Dashboard;
