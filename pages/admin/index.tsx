import { Button, Card, Grid, Typography } from '@mui/material';
import type { GetServerSideProps, NextPage } from 'next';
import { FormProvider, useForm } from 'react-hook-form';
import Head from 'next/head';
import styles from '../../styles/Home.module.css';
import { AppInput } from '../../components/AppInput';
import { useMutation } from 'react-query';
import { axiosInstance } from '../../code/constants';
import { useRouter } from 'next/router';
import jscookies from 'js-cookie';
import Cookies from 'cookies';

const postAdmin = async (values: any) => await axiosInstance.post('admin', values);

const Admin: NextPage = () => {
  const router = useRouter();
  const form = useForm();
  const { mutate } = useMutation(postAdmin);

  const onSubmit = (values: any) => {
    mutate(values, {
      onSuccess: ({ data }) => {
        jscookies.set('token', data.user.token);
        router.push('/admin/dashboard');
      },
    });
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Investhy - Admin login</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main style={{ backgroundImage: `url(/backgroundImage.jpeg)` }} className={styles.main}>
        <div className={styles.mainCover} />
        <div className={styles.content}>
          <Card className={styles.loginCard}>
            <Typography textAlign='center'>Login</Typography>
            <FormProvider {...form}>
              <form className={styles.loginForm} onSubmit={form.handleSubmit(onSubmit)}>
                <Grid paddingY={2}>
                  <AppInput name='email' label='Email' type='email' fullWidth />
                </Grid>
                <Grid paddingY={2}>
                  <AppInput name='password' type='password' label='Password' fullWidth />
                </Grid>
                <Button variant='contained' type='submit'>
                  Login
                </Button>
              </form>
            </FormProvider>
          </Card>
        </div>
      </main>
    </div>
  );
};

export const getServerSideProps: GetServerSideProps = async ({ req, res }) => {
  const cookies = new Cookies(req, res);

  const token = cookies.get('token');

  try {
    const { data } = await axiosInstance.get('admin', { headers: { Authorization: `Bearer ${token}` } });

    if (data) {
      return {
        redirect: {
          destination: '/admin/dashboard',
          permanent: false,
        },
      };
    }

    return {
      props: {},
    };
  } catch (error) {
    return {
      props: {},
    };
  }
};

export default Admin;
