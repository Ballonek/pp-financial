import { Button } from '@mui/material';
import type { NextPage } from 'next';
import Head from 'next/head';
import { useState } from 'react';
import { getDashboard, getQuestions } from '../code/api';
import { axiosInstance, baseApiUrl, defaultDashboard } from '../code/constants';
import { Questions } from '../components/Questions';
import { FormProps, Question, QuestionType } from '../components/types';
import { QuestionsProvider } from '../hooks/useQuestions';
import styles from '../styles/Home.module.css';

type ServerImg = {
  data: {
    attributes: {
      name: string;
      alternativeText: string;
      url: string;
      [key: string]: any;
    };
  };
  createdAt: string;
  updatedAt: string;
  id: number;
};

type HomeServerProps = {
  questions: Question[];
  dashboard: FormProps;
};

const Home: NextPage<HomeServerProps> = ({ questions, dashboard }) => {
  const [isStarted, setIsStarted] = useState(false);

  return (
    <QuestionsProvider questions={questions}>
      <div className={styles.container}>
        <Head>
          <title>Investhy</title>
          <meta name='description' content='Generated by create next app' />
          <link rel='icon' href='/favicon.ico' />
        </Head>
        <main style={{ backgroundImage: `url(/api/dashboard/backgroundImg)` }} className={styles.main}>
          <div className={styles.mainCover} />
          <div className={styles.content}>
            {!isStarted ? (
              <>
                <div className={styles.welcome}>
                  <h2 className={styles.welcomeText}>{dashboard?.welcomeText}</h2>
                </div>
                <div>
                  <Button onClick={() => setIsStarted(true)} className={styles.welcomeBtn} variant='contained'>
                    Zaƒçni
                  </Button>
                </div>
              </>
            ) : (
              <Questions />
            )}
          </div>
        </main>
      </div>
    </QuestionsProvider>
  );
};

export const getServerSideProps = async () => {
  try {
    // const response = await axiosInstance.get('api/main-layout?populate=*');
    const { questions } = await getQuestions();

    const response = await getDashboard();

    return {
      props: {
        // layout: { id: data.id, ...data.attributes },
        questions: questions,
        dashboard: response.data,
      },
    };
  } catch (error) {
    return {
      props: {
        questions: [],
        dashboard: defaultDashboard,
      },
    };
  }
};

export default Home;
